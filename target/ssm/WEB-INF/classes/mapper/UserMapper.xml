<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hs.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.hs.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="role_id" property="roleId" jdbcType="INTEGER" />
    <result column="type_id" property="typeId" jdbcType="INTEGER" />
    <result column="tel" property="tel" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="balance" property="balance" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, username, password, role_id,type_id,tel,realname,balance
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  <!--根据用户名查询用户信息-->
  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from user
    where username = #{username}
  </select>

  <!--根据条件用户列表-->
  <select id="selectByKeys" resultType="map" parameterType="map" >
    select
    t1.id,t1.username,t1.tel,t2.role_name rolename,t3.type_name typename
    from user t1 left join role t2 on t1.role_id=t2.id
    left join type t3 on t1.type_id=t3.id
    where 1=1
    <if test="username!=null and username!=''">
      and t1.username like '%${username}%'
    </if>
    <if test="roleId!=null and roleId>0">
      and t1.role_id =#{roleId}
    </if>
    <if test="typeId!=null and typeId>0">
      and t1.type_id =#{typeId}
    </if>
    order by t1.id desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>

  <delete id="deleteByArray" parameterType="java.lang.Integer" >
    delete from user
    <where>
      <if test="ids!=null">
        <foreach collection="ids" item="id" open="id in(" separator="," close=")">
          #{id}
        </foreach>
      </if>
    </where>
  </delete>

  <insert id="insert" parameterType="com.hs.model.User" >
    insert into user (id, username, password, role_id,type_id,tel,realname,balance
      )
    values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{roleId,jdbcType=INTEGER},#{typeId,jdbcType=INTEGER},  #{tel,jdbcType=VARCHAR},
            #{realname,jdbcType=VARCHAR},#{balance,jdbcType=INTEGER}
           )
  </insert>
  <insert id="insertSelective" parameterType="com.hs.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="roleId != null" >
        role_id,
      </if>
      <if test="typeId != null" >
        type_id,
      </if>
      <if test="tel != null" >
        tel,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="typeId != null" >
        #{typeId,jdbcType=INTEGER},
      </if>
      <if test="tel != null" >
        tel,
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hs.model.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
        type_id = #{typeId,jdbcType=INTEGER},
      <if test="tel != null" >
        tel = #{tel,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hs.model.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      role_id = #{roleId,jdbcType=INTEGER},
      type_id = #{typeId,jdbcType=INTEGER},
      tel = #{tel,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateUserSetting" parameterType="map" >
    update user
    set tel = #{tel,jdbcType=VARCHAR},
        realname = #{realname,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateUserPassword" parameterType="map" >
    update user
    set password = #{newpassword,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateBalanceByPrimaryKey" parameterType="map" >
    update user
    set balance=balance+#{money}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="PayWatchFix" parameterType="map" >
    update user
    set balance = balance-#{fixprice}
    where id = #{id}
  </update>
  <update id="RefundWatch" parameterType="map" >
    update user
    set balance = balance+#{fixprice}
    where id = (select a.id from (select id from user where realname=(select user_name from watch where id=${watchId}))a)
  </update>

  <select id="selectBalanceById" resultType="Integer" parameterType="java.lang.Integer" >
    select
    balance
    from user
    where id = #{id}
  </select>

</mapper>